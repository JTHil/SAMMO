name: build
run-name: Build Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_call:
jobs:
  build:
    name: Build
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python:
          - "3.11"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        id: setup-python
        with:
          python-version: ${{ matrix.python }}
      - name: Setup pipx for build tool isolation
        run: |
          pip install --user pipx
          pipx ensurepath
      - name: Set up poetry and install dependencies
        run: |
          pipx install --python '${{ steps.setup-python.outputs.python-path }}' poetry
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry install --with dev
      - name: Run pre-commit checks
        run: |
          poetry run poe pre-commit
      - name: Run static type checks
        continue-on-error: true
        run: |
          poetry run poe type-check
      - name: Run tests
        run: |
          poetry run poe test -v
      - name: Build wheel and sdist for distribution
        run: |
          pipx install  --python '${{ steps.setup-python.outputs.python-path }}' build
          pyproject-build
      - name: Check distribution with twine
        run: |
          pipx install  --python '${{ steps.setup-python.outputs.python-path }}' twine
          twine check --strict dist/*
      - name: Store the distribution files
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/
      - name: Build documentation artifacts
        run: |
          poetry run poe build-docs
      - name: Store the documentation artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: _build_docs/_build/html

    publish-testpypi:
      name: Publish to Test PyPI
      runs-on: ubuntu-latest
      needs: build
      defaults:
        run:
          shell: bash
      environment:
        name: testpypi
        url: https://test.pypi.org/p/sammo
      permissions:
        id-token: write  # IMPORTANT: mandatory for trusted publishing
      steps:
        - name: Download all the dists
          uses: actions/download-artifact@v3
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution to TestPyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            repository-url: https://test.pypi.org/legacy/
